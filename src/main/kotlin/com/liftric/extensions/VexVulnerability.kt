package com.liftric.extensions

import org.cyclonedx.model.vulnerability.Vulnerability
import org.gradle.api.Project
import org.gradle.api.provider.Property
import org.gradle.api.tasks.Input
import org.gradle.api.tasks.Internal
import org.gradle.api.tasks.Optional

data class VexVulnerability(
    val id: String,
    val source: String,
    val detail: String?,
    val analysis: Vulnerability.Analysis.State,
)

@Suppress("MemberVisibilityCanBePrivate")
@ConfigDsl
class VexVulnerabilityBuilder(@get:Internal val project: Project) {
    @get:Input
    val id: Property<String> = project.objects.property(String::class.java)

    @get:Input
    val source: Property<String> = project.objects.property(String::class.java)

    @get:Input
    @get:Optional
    val detail: Property<String?> = project.objects.property(String::class.java)

    @get:Input
    val analysis: Property<Vulnerability.Analysis.State> =
        project.objects.property(Vulnerability.Analysis.State::class.java)

    fun build(): VexVulnerability = VexVulnerability(
        id = id.get(),
        source = source.get(),
        detail = detail.orNull,
        analysis = analysis.get(),
    )
}
